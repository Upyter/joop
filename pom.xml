<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2019 Upyter
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a
  ~ copy of this software and associated documentation files (the "Software"),
  ~ to deal in the Software without restriction, including without limitation
  ~ the rights to use, copy, modify, merge, publish, distribute, sublicense,
  ~ and/or sell copies of the Software, and to permit persons to whom the
  ~ Software is furnished to do so, subject to the following conditions:
  ~ The above copyright notice and this permission notice shall be included
  ~ in all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  ~ OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
  ~ THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  ~ FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  ~ DEALINGS IN THE SOFTWARE.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.upyter</groupId>
    <artifactId>joop</artifactId>
    <version>0.43</version>
    <packaging>jar</packaging>
    <name>joop</name>
    <description>Object oriented java 2d wrapper for shapes</description>
    <url>https://github.com/Upyter/joop</url>
    <inceptionYear>2019</inceptionYear>
    <organization>
        <name>Upyter</name>
        <url>https://github.com/Upyter</url>
    </organization>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://github.com/Upyter/joop/blob/master/LICENSE</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Eugen Deutsch</name>
            <email>enomeral@gmx.de</email>
            <organization>Upyter</organization>
            <organizationUrl>https://github.com/Upyter</organizationUrl>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git@github.com:Upyter/joop.git</connection>
        <developerConnection>scm:git:git@github.com:Upyter/joop.git</developerConnection>
        <url>http://github.com/Upyter/joop</url>
    </scm>

    <repositories>
        <!-- to import github projects as library without using maven -->
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- test framework -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <!-- test framework -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>compile</scope>
        </dependency>
        <!-- my library for the basic units -->
        <dependency>
            <groupId>com.github.Upyter</groupId>
            <artifactId>unit</artifactId>
            <version>77fcb984d9</version>
        </dependency>
        <!-- to compare swing drawing with expectation images -->
        <dependency>
            <groupId>net.avh4.util</groupId>
            <artifactId>imagecomparison-swing</artifactId>
            <version>0.3.1</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <properties>
        <!-- sonar cloud stuff -->
        <sonar.sources>src/main/java</sonar.sources>
        <sonar.tests>src/test/java</sonar.tests>
        <runSuite>**/*Suite.class</runSuite>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.language>java</sonar.language>
    </properties>

    <build>
        <plugins>
            <!-- code analysis tool -->
            <plugin>
                <groupId>com.qulice</groupId>
                <artifactId>qulice-maven-plugin</artifactId>
                <version>0.18.2</version>
                <configuration>
                    <excludes combine.children="append">
                        <exclude>checkstyle:/src/main/resources/.*</exclude>
                        <exclude>findbugs:.*</exclude>
                        <exclude>duplicatefinder:.*</exclude>
                        <exclude>dependencies:.*</exclude>
                    </excludes>
                    <license>file:${basedir}/LICENSE</license>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- to set the java version to 10-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.10</source>
                    <target>1.10</target>
                </configuration>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- needed for sonar cloud-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.1</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- static code analysis tool -->
        <profile>
            <id>sonar</id>
            <properties>
                <sonar.host.url>https://sonarcloud.io</sonar.host.url>
                <sonar.organization>mincong-h-github</sonar.organization>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>3.5.0.1254</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sonar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.8.2</version>
                        <configuration>
                            <append>true</append>
                            <includes>my.root.package.*</includes>
                            <destFile>${sonar.jacoco.reportPath}</destFile>
                            <dataFile>${sonar.jacoco.reportPath}</dataFile>
                        </configuration>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>prepare-agent-integration</id>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jacoco-site</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- for mutation testing -->
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <version>1.4.3</version>
                        <configuration>
                            <targetClasses>
                                <param>logic*</param>
                            </targetClasses>
                            <outputFormats>
                                <outputFormat>XML</outputFormat>
                            </outputFormats>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
